<?xml version='1.0' ?>

<launch>

  <arg name="use_sim_time" default="false" description="Use the /clock topic for time to sync with simulation"/>
  <arg name="viz_config_file" default="$(find-pkg-share rmf_visualization_schedule)/config/rmf.rviz"/>
  <arg name="config_file" description="Building description file required by rmf_building_map_tools"/>
  <arg name="initial_map" default="ground" description="Initial map name for the visualizer"/>
  <arg name="headless" default="false" description="do not launch rviz; launch gazebo in headless mode"/>
  <arg name="bidding_time_window" description="Time window in seconds for task bidding process" default="2.0"/>
  <arg name="use_unique_hex_string_with_task_id" default="true" description="Appends a unique hex string to the task ID"/>
  <arg name="server_uri" default="" description="The URI of the api server to transmit state and task information."/>

  <!-- Schedule Visualization -->
  <arg name="rate" default="10.0" description= "The rate in hz at which the scheduler markers should publish"/>
  <arg name="path_width" default="0.2" description="Width of schedule path(m) to be rendered"/>
  <arg name="wait_secs" default="10" description="The nummber of seconds the schedule visualizer should keep trying to connect to the rmf_schedule_node"/>
  <arg name="websocket_port" default="8006"/>
  <arg name="retained_history_count" default="50" description="The retained history count for negotiations"/>

  <!-- Navgraph Visualization -->
  <arg name="lane_width" default="0.3" description="Width of lanes(m) to be rendered"/>
  <arg name="waypoint_scale" default="0.8" description="The relative size of a waypoint wrt the lane width"/>
  <arg name="text_scale" default="0.7" description="The relative size of a text label wrt the lane width"/>
  <arg name="lane_transparency" default="0.3" description="The transparency of a rendered lane in default state"/>

  <!-- Traffic Schedule  -->
  <node pkg="rmf_traffic_ros2" exec="rmf_traffic_schedule" output="both" name="rmf_traffic_schedule_primary" args="--ros-args --log-level FATAL">
    <param name="use_sim_time" value="$(var use_sim_time)"/>
  </node>

  <!-- Blockade Moderator -->
  <node pkg="rmf_traffic_ros2" exec="rmf_traffic_blockade" output="both" args="--ros-args --log-level FATAL">
    <param name="use_sim_time" value="$(var use_sim_time)"/>
  </node>

  <!-- Building Map  -->
  <group>
    <node pkg="rmf_building_map_tools" exec="building_map_server" args="$(var config_file)">
      <param name="use_sim_time" value="$(var use_sim_time)"/>
    </node>
  </group>

  <!-- Visualization rviz -->
  <group>
  <node pkg="rmf_visualization_schedule" exec="schedule_visualizer_node">
      <param name="use_sim_time" value="$(var use_sim_time)"/>
      <param name="rate" value="$(var rate)"/>
      <param name="path_width" value="$(var path_width)"/>
      <param name="initial_map_name" value="$(var initial_map)"/>
      <param name="wait_secs" value="$(var wait_secs)"/>
      <param name="port" value="$(var websocket_port)"/>
      <param name="retained_history_count" value="$(var retained_history_count)"/>
    </node>
    <node pkg="rmf_visualization_navgraphs" exec="navgraph_visualizer_node">
        <param name="use_sim_time" value="$(var use_sim_time)"/>
        <param name="initial_map_name" value="$(var initial_map)"/>
        <param name="lane_width" value="$(var lane_width)"/>
        <param name="waypoint_scale" value="$(var waypoint_scale)"/>
        <param name="text_scale" value="$(var text_scale)"/>
        <param name="lane_transparency" value="$(var lane_transparency)"/>
      </node>
  </group>

  <!-- Door Supervisor -->
  <group>
    <node pkg="rmf_fleet_adapter" exec="door_supervisor" args="--ros-args --log-level FATAL">
      <param name="use_sim_time" value="$(var use_sim_time)"/>
    </node>
  </group>

  <!-- Lift Supervisor -->
  <group>
    <node pkg="rmf_fleet_adapter" exec="lift_supervisor" args="--ros-args --log-level FATAL">
      <param name="use_sim_time" value="$(var use_sim_time)"/>
    </node>
  </group>

  <!-- Dispatcher Node -->
  <group>
    <node pkg="rmf_task_ros2" exec="rmf_task_dispatcher"  output="screen" args="--ros-args --log-level FATAL">
      <param name="use_sim_time" value="$(var use_sim_time)"/>
      <param name="bidding_time_window" value="$(var bidding_time_window)"/>
      <param name="use_unique_hex_string_with_task_id" value="$(var use_unique_hex_string_with_task_id)"/>
      <param name="server_uri" value="$(var server_uri)"/>
      <env name="RCUTILS_LOGGING_SEVERITY_THRESHOLD" value="FATAL"/>
    </node>
  </group>
</launch>
